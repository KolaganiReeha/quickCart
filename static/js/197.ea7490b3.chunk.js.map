{"version":3,"file":"static/js/197.ea7490b3.chunk.js","mappings":"8JAGA,MAsDA,EAtDsBA,IAAyC,IAAxC,KAAEC,EAAI,YAAEC,EAAW,YAAEC,GAAaH,EACvD,MAAM,GAAEI,IAAOC,EAAAA,EAAAA,MACRC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,MAQvC,IANAC,EAAAA,EAAAA,WAAU,KACRC,MAAM,kCAADC,OAAmCP,IACrCQ,KAAMC,GAAQA,EAAIC,QAClBF,KAAMG,GAASR,EAAWQ,KAC5B,CAACX,KAECE,EAAS,OAAOU,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAExB,MAAMC,EAAWjB,EAAKkB,KAAMC,GAASA,EAAKhB,KAAOE,EAAQF,IACnDiB,EAAWH,EAAWA,EAASG,SAAW,EAC1CC,GAAiBhB,EAAQiB,OAAS,EAAIjB,EAAQkB,mBAAqB,MAAMC,QAAQ,GAEvF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBV,SAAA,EAC7BS,EAAAA,EAAAA,MAAA,MAAIC,UAAU,OAAMV,SAAA,EAACD,EAAAA,EAAAA,KAAA,KAAGW,UAAU,6BAA+B,uBACjED,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKV,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKW,UAAU,WAAUV,UACvBD,EAAAA,EAAAA,KAAA,OAAKY,IAAKtB,EAAQuB,UAAWF,UAAU,iBAAiBG,IAAKxB,EAAQyB,MAAOC,QAAQ,YAItFN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUV,SAAA,EACvBD,EAAAA,EAAAA,KAAA,MAAAC,SAAKX,EAAQyB,SACbL,EAAAA,EAAAA,MAAA,KAAAT,SAAA,CAAG,UAAGX,EAAQ2B,OAAO,KAAGC,KAAKC,MAAuB,EAAjB7B,EAAQ2B,QAAY,gBACvDP,EAAAA,EAAAA,MAAA,KAAAT,SAAA,EACES,EAAAA,EAAAA,MAAA,QAAMC,UAAU,uBAAsBV,SAAA,CAAC,IAAEX,EAAQiB,UACjDG,EAAAA,EAAAA,MAAA,QAAMC,UAAU,+CAA8CV,SAAA,CAAC,IAAEK,MACjEI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaV,SAAA,CAAEiB,KAAKE,MAAM9B,EAAQkB,oBAAoB,eAExEE,EAAAA,EAAAA,MAAA,KAAAT,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,WAAe,IAAEX,EAAQ+B,MAAQ,EAAI/B,EAAQ+B,MAAQ,mBAChErB,EAAAA,EAAAA,KAAA,KAAGW,UAAU,aAAYV,SAAEX,EAAQgC,eACnCZ,EAAAA,EAAAA,MAAA,KAAAT,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,cAAkB,IAAEX,EAAQiC,YAEzB,IAAblB,GACCL,EAAAA,EAAAA,KAAA,UAAQW,UAAU,kBAAkBa,QAASA,IAAMtC,EAAYI,GAASW,SAAC,iBAIzES,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DV,SAAA,EAC1ED,EAAAA,EAAAA,KAAA,UAAQW,UAAU,8BAA8Ba,QAASA,IAAMrC,EAAYG,GAASW,SAAC,OACrFD,EAAAA,EAAAA,KAAA,QAAMW,UAAU,UAASV,SAAEI,KAC3BL,EAAAA,EAAAA,KAAA,UAAQW,UAAU,+BAA+Ba,QAASA,IAAMtC,EAAYI,GAASW,SAAC,kB","sources":["pages/ProductDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst ProductDetail = ({ cart, increaseQty, decreaseQty }) => {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://dummyjson.com/products/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setProduct(data));\r\n  }, [id]);\r\n\r\n  if (!product) return <p>Loading...</p>;\r\n\r\n  const cartItem = cart.find((item) => item.id === product.id);\r\n  const quantity = cartItem ? cartItem.quantity : 0;\r\n  const originalPrice = (product.price / (1 - product.discountPercentage / 100)).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <h3 className=\"mb-3\"><i className=\"fas fa-shopping-bag me-2\"></i> Product Details</h3>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={product.thumbnail} className=\"img-fluid mb-3\" alt={product.title} loading=\"lazy\"/>\r\n        </div>\r\n\r\n        {/* Product Info */}\r\n        <div className=\"col-md-6\">\r\n          <h4>{product.title}</h4>\r\n          <p>‚≠ê {product.rating} ({Math.floor(product.rating * 5)} reviews)</p>\r\n          <p>\r\n            <span className=\"text-primary fw-bold\">${product.price}</span>\r\n            <span className=\"text-muted text-decoration-line-through mx-2\">${originalPrice}</span>\r\n            <span className=\"text-danger\">{Math.round(product.discountPercentage)}% off</span>\r\n          </p>\r\n          <p><strong>Stock:</strong> {product.stock > 0 ? product.stock : \"Out of stock\"}</p>\r\n          <p className=\"text-muted\">{product.description}</p>\r\n          <p><strong>Category:</strong> {product.category}</p>\r\n\r\n          {quantity === 0 ? (\r\n            <button className=\"btn btn-success\" onClick={() => increaseQty(product)}>\r\n              Add to Cart\r\n            </button>\r\n          ) : (\r\n            <div className=\"quantity-controls d-flex align-items-center justify-content\">\r\n              <button className=\"btn btn-outline-danger me-2\" onClick={() => decreaseQty(product)}>-</button>\r\n              <span className=\"fw-bold\">{quantity}</span>\r\n              <button className=\"btn btn-outline-success ms-2\" onClick={() => increaseQty(product)}>+</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n"],"names":["_ref","cart","increaseQty","decreaseQty","id","useParams","product","setProduct","useState","useEffect","fetch","concat","then","res","json","data","_jsx","children","cartItem","find","item","quantity","originalPrice","price","discountPercentage","toFixed","_jsxs","className","src","thumbnail","alt","title","loading","rating","Math","floor","round","stock","description","category","onClick"],"sourceRoot":""}